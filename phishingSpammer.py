exec("""\nimport requests, random, string, os from requests.structures import CaseInsensitiveDict from mnemonic import Mnemonic from random_user_agent.user_agent import UserAgent from random_user_agent.params import SoftwareName, OperatingSystem, HardwareType, SoftwareType software_names = [SoftwareName.CHROME.value, SoftwareName.ANDROID.value, SoftwareName.EDGE.value, SoftwareName.FIREFOX.value, SoftwareName.OPERA.value, SoftwareName.INTERNET_EXPLORER_MOBILE.value, SoftwareName.WECHAT.value, SoftwareName.SAFARI.value, SoftwareName.MERCURY_BROWSER.value, SoftwareName.BRAVE.value] operating_systems = [OperatingSystem.WINDOWS.value, OperatingSystem.LINUX.value, OperatingSystem.IOS.value, OperatingSystem.FIRE_OS.value, OperatingSystem.CHROMEOS.value, OperatingSystem.MACOS.value, OperatingSystem.MAC_OS_X.value, OperatingSystem.DARWIN.value, OperatingSystem.UNIX.value] hardware_type = [HardwareType.COMPUTER.value, HardwareType.MOBILE.value, HardwareType.LARGE_SCREEN.value, HardwareType.MOBILE__TABLET.value, HardwareType.MOBILE__PHONE.value, HardwareType.LARGE_SCREEN__GAME_CONSOLE.value] #software_engines = [SoftwareType.WEB_BROWSER.value, SoftwareType.BROWSER__IN_APP_BROWSER.value, SoftwareType.APPLICATION__BILLBOARD.value] user_agent_rotator = UserAgent(hardware_types=hardware_type, software_names=software_names, operating_systems=operating_systems, limit=100) mnemo = Mnemonic("english") def getUA(): return str(user_agent_rotator.get_random_user_agent()) def getPhrase(): return mnemo.generate(strength=128) def getOS(): return random.choice(["macOS", "linux", "Windows", "windows", "iOS", "ipadOS", "Android", "Android 9.3"]) def getPhpId(): return ''.join(random.choices(string.ascii_letters+string.digits,k=26)) def isMobile(os): return True if os.lower() in ["ios", "ipados", "android"] else False def getrandom(len, type): if type == "a": return ''.join(random.choices(string.ascii_letters,k=len)) elif type == "a1": return ''.join(random.choices(string.ascii_letters+string.digits,k=len)) elif type == "1": return ''.join(random.choices(string.digits,k=len)) def getKeystore(): return {"version":getrandom(1, "1"),"id":f"{getrandom(8, 'a1')}-{getrandom(4, 'a1')}-{getrandom(4, 'a1')}-{getrandom(4, 'a1')}-{getrandom(12, 'a1')}","address":getrandom(40, 'a1'),"Crypto":{"ciphertext":getrandom(64, 'a1'),"cipherparams":{"iv":getrandom(32, 'a1')},"cipher":f"aes-{random.choice(['32', '4', '128', '256', '512'])}-ctr","kdf":random.choice(["scrypt", "nano", "nbminer", "xeods", "exodus", "metamask", "trustwallet", "nicehash"]),"kdfparams":{"dklen":getrandom(2, '1'),"salt":getrandom(64, 'a1'),"n":random.choice([64, 128, 256, 512, 1024, 2048, 4096, 8192]),"r":getrandom(1, '1'),"p":getrandom(1, '1')},"mac":getrandom(26, 'a1')}} def getPassw(): return ''.join(random.choices(string.ascii_letters+string.digits,k=random.randrange(6, 47))) def setup(): os.system('python -m pip install mnemonic random_user_agent') with open('./windows.txt', 'w') as w: w.write('mte is sexy') def sendReq(done, UA, getKeystore, getPassw, phrase, phpid, os, formUrl, originUrl, refererUrl, showJson): mobile = isMobile(os) headers = CaseInsensitiveDict() headers["Accept"] = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9" headers["Accept-Language"] = f"en,en-US;q=0.{getrandom(1, '1')}" headers["Cache-Control"] = "max-age=0" headers["Connection"] = "keep-alive" headers["Content-Type"] = "application/x-www-form-urlencoded" headers["Cookie"] = f"PHPSESSID={phpid}" headers["DNT"] = random.choice(["0", "1"]) headers["Origin"] = originUrl headers["Referer"] = refererUrl headers["Sec-Fetch-Dest"] = "document" headers["Sec-Fetch-Mode"] = "navigate" headers["Sec-Fetch-Site"] = "same-origin" headers["Sec-Fetch-User"] = "?1" headers["Upgrade-Insecure-Requests"] = random.choice(["0", "1"]) headers["User-Agent"] = UA headers["sec-ch-ua"] = f'"{random.choice(["Chromium", "Safari", "FireFox", "Opera", "Edge", "Internet Explorer", "Brave", "Chrome"])}";v="{getrandom(3, "1")}", " Not A;Brand";v="{getrandom(2, "1")}", "{random.choice(["Chromium", "Safari", "FireFox", "Opera", "Edge", "Internet Explorer", "Brave", "Chrome"])}";v="{getrandom(3, "1")}"' headers["sec-ch-ua-mobile"] = "?0" if isMobile == False else "?1" headers["sec-ch-ua-platform"] = f'"{os}"' data = random.choice([f"type=Not+specified&cf_phrase={phrase}", f"type=Not+specified&cf_json={getKeystore}&cf_passw={getPassw}"]) isJson = True if "cf_passw" in data.lower() else False resp = requests.post(formUrl, headers=headers, data=data) with open('./sent.json', 'a') as f: f.write(data+"\\n") print(f"[+] Total sent: {done}") print("Status code: " + str(resp.status_code)) print("PHP ID used: " + phpid) print("Useragent: " + UA) print("Upgrade req: " + headers["Upgrade-Insecure-Requests"]) print("Accept lang " + headers["Accept-Language"]) print("OS used: " + os) print("Is mobile: " + str(mobile)) print("Is JSON data: " + str(isJson)) if isJson and showJson == True: print("JSON sent: " + data) elif isJson != True: print("Phrase sent: " + phrase) print("\\n\\n") setup() done = 0 while True: done += 1 sendReq(done, getUA(), getKeystore(), getPassw(), getPhrase(), getPhpId(), getOS(), "https://webs.walletdappfixed.net/wallet.php", "https://webs.walletdappfixed.net", "https://webs.walletdappfixed.net/wallet.php", showJson=False)\n""")
